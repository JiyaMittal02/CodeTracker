STRIVER VERSION ANSWER:-
class Solution:
    def findMissingRepeatingNumbers(self, nums):
        # A: repeats twice
        # B : missing from range
        d={}
        A,B=-1,-1
        for i in nums:
            if i not in d:

                d[i]=1
            else:
                A=i
         

        for i in range(1,len(nums)+1):
            if i not in d:
                B=i
        return [A,B]

LEETCODE VERSION ANSWER:-
import math
class Solution:
    def findMissingAndRepeatedValues(self, grid: List[List[int]]) -> List[int]:
        d={}
        for i in range(len(grid)):
            for j in range(len(grid[i])):
                if grid[i][j] not in d:
                    d[grid[i][j]]=1
                else:
                    A=grid[i][j]
                    
        endrange=int(math.pow(len(grid),2))
        for i in range(1,endrange+1):
            if i not in d:
                B=i
                break
        return [A,B]
  CAN ALSO BE SOLVED USING MATH EQNS

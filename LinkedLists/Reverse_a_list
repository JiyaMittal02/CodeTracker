#BRUTE FORCE--- CONVERT TO ARRAY REVERSE IT AND THEN AGAIN BACK TO LL
#OPTIMIZED --- USE THREE POINTERS TO KEEP TRACK AND PERFORM REVERSAL IN A SINGLE PASS




# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reverseList(self, head: Optional[ListNode]) -> Optional[ListNode]:
        prev=None
        nex=None
        curr=head
        while(curr!=None):
            nex=curr.next
            curr.next=prev
            prev=curr
            curr=nex
        head=prev
        return head
        
